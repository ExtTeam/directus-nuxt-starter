services:
  nuxt:
    container_name: 'nuxt'
    restart: always
    build:
      context: ./
      dockerfile: .docker/nuxt/Dockerfile
      target: production
    image: ${COMPOSE_PROJECT_NAME}/frontend:latest
    volumes:
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env.nuxt
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://0.0.0.0:3000/health" ]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 15s
    depends_on:
      redis:
        condition: service_healthy
  directus:
    image: directus/directus:11.1.2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - directus_extensions:/directus/extensions
      - directus_migrations:/directus/migrations
      - directus_templates:/directus/templates
      - directus_upload:/directus/upload
    env_file:
      - .env.directus
  postgres:
    image: postgis/postgis:17-3.5-alpine
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql/data:rw
    env_file:
      - .env.postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
  minio:
    image: minio/minio
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - minio_data:/data
    env_file:
      - .env.minio
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 20s
      retries: 3
  redis:
    container_name: 'redis'
    image: redis:7-alpine3.20
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - redis_data:/data
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 500ms
      timeout: 1s
volumes:
  directus_extensions:
  directus_migrations:
  directus_templates:
  directus_upload:
  postgres_data:
  minio_data:
  redis_data:
